summarise(spark=sparkline::spk_chr(vote.share,
chartRangeMin=0,
type="line")) %>%
ungroup()
# empty_cells <- function(df, var) {
#   var <- enquo(var)
#   df %>%
#     mutate(var:=case_when(!!var==lag(!!var) ~ "",
#                          TRUE ~ as.character(!!var)))
# }
tab.share.largest.party <- tab.share.largest.party %>%
left_join(.,change.indicator %>%
select(country, ethnicity, change=change.indicator)) %>%
left_join(.,spark %>% select(country, ethnicity, development=spark)) %>%
mutate(indicator=case_when(indicator=="vote.share" ~ "vote share of segment's largest party")) %>%
filter(!ethnicity %in% c("nk",NA)) %>%
mutate_all(as.character) %>%
replace(is.na(.),"") %>%
select(indicator, country, everything()) #%>%
# ungroup() %>%
# mutate(indicator=case_when(indicator==lag(indicator) ~ "",
#                            TRUE ~ as.character(indicator))) %>%
# ungroup() %>%
# mutate(country=case_when(indicator==lag(country, order_by = c(ethnicity)) ~ "",
#                          TRUE ~ as.character(country)))
# empty_cells <- function(df, var) {
#   var <- enquo(var)
#   df %>%
#     mutate(var:=case_when(!!var==lag(!!var) ~ "",
#                           TRUE ~ as.character(!!var)))
# }
tab.share.largest.party  %>%
formattable::formattable(align=c(rep("l",3), rep("r",ncol(tab.share.largest.party)-2)),
list(change=formatter("span", style = x ~ ifelse(x=="increase",
style(color="green"),
ifelse(x=="decrease",
style(color="red"),
ifelse(x=="stable",
style(color="grey"),NA)))))) %>%
as.htmlwidget() %>%
spk_add_deps()
# intra-voteshare of largest party ----------------------------------------------
# __ table ----------------------------------------------------------------
intra.share.largest.party <- df %>%
filter(election %in% c("Assembly", "House of Representatives")) %>%
filter(seats>0) %>% #!!
group_by(country, year, ethnicity) %>%
mutate(votes.eth=sum(votes)) %>%
mutate(vote.share=votes/votes.eth) %>%
arrange(country, year, ethnicity, desc(vote.share)) %>%
group_by(country, year, ethnicity) %>%
slice(1) %>%
select(country, year, ethnicity, vote.share) %>%
gather(key=vote.share, value=value, -c(country, year, ethnicity)) %>%
mutate(value=round(value, 2))
tab.intra.share.largest.party <- intra.share.largest.party %>%
spread(key=year, value=value)
# __ change ---------------------------------------------------------------
change <- intra.share.largest.party %>%
group_by(country, ethnicity) %>%
arrange(year, .by_group=TRUE) %>%
slice(c(1,n())) %>%
mutate(change=case_when(value - lag(value) > 0 ~ "increase",
value - lag(value) < 0 ~ "decrease",
value - lag(value) == 0 ~ "stable")) %>%
filter(!is.na(change))
# __ spark -----------------------------------------------------------------
spark <- intra.share.largest.party %>%
group_by(country, ethnicity) %>%
arrange(year, .by_group=TRUE) %>%
summarise(spark=sparkline::spk_chr(value,
chartRangeMin=0,
type="line")) %>%
ungroup()
# __merge -----------------------------------------------------------
tab.intra.share.largest.party <- tab.intra.share.largest.party %>% left_join(.,change %>% select(country, ethnicity, change)) %>%
left_join(.,spark) %>%
select(indicator=vote.share, country, ethnicity, everything()) %>%
mutate(indicator="intra-segment vote share largest party") %>%
mutate_if(is.numeric, as.character) %>%
replace(is.na(.),"") %>%
filter(!ethnicity %in% c("nk",NA))
# __spark table -----------------------------------------------------------
tab.intra.share.largest.party %>%
formattable::formattable(align=c(rep("l",3), rep("r",ncol(tab.share.largest.party)-2)),
list(change=formatter("span", style = x ~ ifelse(x=="increase",
style(color="green"),
ifelse(x=="decrease",
style(color="red"),
ifelse(x=="stable",
style(color="grey"),NA)))))) %>%
as.htmlwidget() %>%
spk_add_deps()
# >>plot ------------------------------------------------------------------
intra.share.largest.party  %>%
filter(!ethnicity %in% c("nk", NA)) %>%
ggplot()+
geom_line(aes(x=year, y=value,
color=ethnicity))+
facet_wrap(vars(country, ethnicity))
# Difference between 1st and 2nd per segment ------------------------------
plot <- df %>%
filter(election %in% c("Assembly", "House of Representatives")) %>%
filter(seats>0) %>%
group_by(country, year, ethnicity) %>%
mutate(votes.total=sum(votes)) %>%
mutate(vote.share=votes/votes.total) %>%
arrange(country, year, ethnicity, desc(vote.share)) %>%
slice(1:2) %>%
mutate(vote.share.diff=vote.share-lead(vote.share)) %>%
fill(vote.share.diff, .direction=c("down")) %>%
mutate(indicator=row_number(),
pos=case_when(indicator==1 ~ +.1,
indicator==2 ~ -.1)) %>%
filter(!ethnicity %in% c("nk","unknown", NA)) %>%
split(.$country) %>%
map(
~ggplot(.)+
geom_line(aes(x=year, y=vote.share.diff,
color=ethnicity),
size=1)+
geom_path(aes(x=year,
y=vote.share,
group=year),
alpha=0.5)+
geom_point(aes(x=year, y=vote.share),
alpha=0.5)+
geom_text(aes(x=year,
y=pos+vote.share,
label=stringr::str_trunc(party.short,7),
group=year),
size=2)+
geom_hline(yintercept=0.5,
linetype="dashed",
alpha=0.5)+
scale_y_continuous(labels=scales::percent, breaks = seq(0,1,0.25),
minor_breaks = NULL,
limits=c(0,1.1))+
scale_x_continuous(breaks=unique(.$year),
labels=stringr::str_sub(unique(.$year),3,4),
limits=c(1996,2018),
minor_breaks = NULL) +
scale_color_manual(values=ethn.color)+
labs(title=glue("{.$country}"),
y="% of segment's total vote")+
theme_thesis()+
theme(axis.title.x=element_blank(),
panel.grid.major.x = element_blank(),
legend.position = "none",
strip.text = element_text(hjust=0, face="bold"),)+
facet_wrap(vars(ethnicity), nrow=1))
lay <- rbind(c(1,1,1),
c(2,2,NA))
dominance<- arrangeGrob(plot[[1]], plot[[2]], layout_matrix=lay,
top=textGrob(str_wrap("Elite predominance: Difference of instra-segment voteshare between first and second largest party", 70), gp=gpar(fontsize=12)))
grid.draw(dominance)
folder <- paste0(wdr,"/graphs/")
Rfile <- "IntraSegmentDiff_VoteShare"
graphname <- "dominance"
time <- format(Sys.time(),"%Y%m%d-%H%M%S")
format <-".png"
ggsave(dominance, file=paste(folder, Rfile, graphname, time, format, sep="_"),
width=17, height=14, unit="cm", dpi=300)
# effecttive threshold ----------------------------------------------------
threshold <- df %>%
filter(election %in% c("Assembly", "House of Representatives")) %>%
group_by(country, year, election) %>%
summarise(sum.votes=sum(votes),
sum.seats=sum(seats)) %>%
mutate(eff.threshold=sum.votes/sum.seats) %>%
mutate(eff.threshold.perc=eff.threshold/sum.votes)
threshold
threshold %>%
ggplot()+
geom_line(aes(x=year, y=eff.threshold,
color=country))
unique(df$election)
# new parties entering ----------------------------------------------------
old <- list(c("A","B"))
new <- list(c("A","B","C"))
dplyr::setdiff(new[[1]], old[[1]])
new.entrants$data.lag$party
new.entrants<- df %>%
filter(election %in% c("Assembly", "Forum Elections", "House of Representatives")) %>%
filter(seats>0) %>%
distinct(country, year, party, ethnicity) %>%
group_by(country, ethnicity, year) %>%
arrange(year, .by_group=TRUE) %>%
nest() %>%
mutate(n.parties=map(data, pluck, "party") %>% map(length) %>% flatten_dbl(.)) %>%
group_by(country, ethnicity) %>%
mutate(data.lag=lag(data, order_by=year)) %>%
mutate(different=map2(data, data.lag, safely(dplyr::setdiff))) %>%   #! 1st data.lag, then data => parties which are new entering
mutate(parties.diff= map(different, pluck,"result","party") %>% map(length) %>% flatten_dbl(.)) %>%
filter(!is.na(data.lag)) %>%
mutate(perc.diff=parties.diff/n.parties)
spark <- new.entrants %>%
group_by(country, ethnicity) %>%
arrange(year, .by_group=TRUE) %>%
summarise(development=sparkline::spk_chr(parties.diff,
chartRangeMin=0,
chartRangeMax=3,
type="bar"))
unique(new.entrants$year)
new.entrants %>%
filter(!ethnicity %in% c("unknown","nk")) %>%
select(country, ethnicity, year, value=parties.diff) %>%
mutate(indicator="# parties newly entering Assembly") %>%
spread(key=year, value=value) %>%
left_join(.,spark, by=c("country", "ethnicity")) %>%
select(indicator, country, everything()) %>%
mutate_if(is.numeric, as.character) %>%
replace(is.na(.),"")  %>%
ungroup() %>%
arrange(country) %>%
mutate(country=case_when(country==lag(country) ~"",
TRUE ~ as.character(country))) %>%
mutate(indicator=case_when(indicator==lag(indicator) ~ "",
TRUE ~ as.character(indicator))) %>%
formattable::formattable(align=c(rep("l",3), rep("r",length(unique(new.entrants$year))+1))) %>%
as.htmlwidget() %>%
spk_add_deps()
View(new.entrants)
df %>%
filter(str_detect(party, "HDZ")) %>%
distinct()
df %>%
filter(str_detect(party, "HDZ")) %>%
distinct(party)
df %>%
filter(str_detect(party, "HDZ")) %>%
distinct(party, year)
df %>%
filter(str_detect(party, "HDZ")) %>%
distinct(party, year) %>%
arrange(year)
df %>%
filter(str_detect(party, "HDZ")) %>%
distinct(party, year, entity) %>%
arrange(year)
df %>%
filter(str_detect(party, "HDZ")) %>%
distinct(party, year) %>%
arrange(year)
BIH.imp %>%
distinct(party, entity, year)
BIH.imp %>%
distinct(party.standard, entity, year)
BIH.imp %>%
distinct(party.standard, entity, year) %>%
filter(str_detect(party.standard, "HDZ"))
HDZ <- BIH.imp %>%
distinct(party.standard, entity, year) %>%
filter(str_detect(party.standard, "HDZ"))
View(HDZ)
HDZ <- BIH.imp %>%
distinct(party.standard, entity, year, seats) %>%
filter(str_detect(party.standard, "HDZ"))
View(HDZ)
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
distinct(party.standard, entity, year, seats)
View(Serb)
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats)
HDZ <- BIH.imp %>%
distinct(party.standard, entity, year, seats) %>%
filter(str_detect(party.standard, "HDZ")) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "HDZ 1990" ~ "HDZ 1990")))
HDZ <- BIH.imp %>%
distinct(party.standard, entity, year, seats) %>%
filter(str_detect(party.standard, "HDZ")) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
TRUE ~  as.character(party.standard))))
HDZ <- BIH.imp %>%
distinct(party.standard, entity, year, seats) %>%
filter(str_detect(party.standard, "HDZ")) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
TRUE ~  as.character(party.standard)))
View(HDZ)
HDZ <- BIH.imp %>%
distinct(party.standard, entity, year, seats) %>%
filter(str_detect(party.standard, "HDZ")) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
TRUE ~  as.character(party.standard)))
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats) %>%
filter(ethnicity=="C") %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
TRUE ~  as.character(party.standard)))
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats) %>%
filter(ethnicity=="C") %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
TRUE ~  as.character(party.standard)))
BIH.imp
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
TRUE ~  as.character(party.standard)))
View(Croat)
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
filter(seats>0) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
TRUE ~  as.character(party.standard)))
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
filter(seats>0) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "Nova Hrvatska Incijativa") ~ "NHI",
TRUE ~  as.character(party.standard))) %>%
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats)
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
filter(seats>0) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "Nova Hrvatska Incijativa") ~ "NHI",
TRUE ~  as.character(party.standard))) %>%
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats)
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
filter(seats>0) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "Nova Hrvatska Incijativa") ~ "NHI",
TRUE ~  as.character(party.standard)))
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
filter(seats>0) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "Nova Hrvatska Incijativa") ~ "NHI",
TRUE ~  as.character(party.standard)))
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
filter(seats>0) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "Nova Hrvatska Inicijativa") ~ "NHI",
TRUE ~  as.character(party.standard)))
Croat <- BIH.imp %>%
distinct(party.standard, entity, year, seats, ethnicity) %>%
filter(ethnicity=="C") %>%
filter(seats>0) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "HDZ 1990") ~ "HDZ 1990",
str_detect(party.standard, "HDZ") ~ "HDZ",
str_detect(party.standard, "Nova Hrvatska") ~ "NHI",
TRUE ~  as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats)
View(Serb)
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD"))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, "SDS") ~ "SDS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, "(SDS)") ~ "SDS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
str_detect(party.standard, fixed("(SRS)")) ~ "SRS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
str_detect(party.standard, fixed("(SRS)")) ~ "SRS",
str_detect(party.standard, fixed("(DNZ)")) ~ "DNZ",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
str_detect(party.standard, fixed("(SRS)")) ~ "SRS",
str_detect(party.standard, fixed("(DNZ)")) ~ "DNZ",
str_detect(party.standard, fixed("(PDP)")) ~ "PDP",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
str_detect(party.standard, fixed("(SRS)")) ~ "SRS",
str_detect(party.standard, fixed("(DNZ)")) ~ "DNZ",
str_detect(party.standard, fixed("(PDP)")) ~ "PDP",
str_detect(party.standard, fixed("(RS)")) ~ "RS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
str_detect(party.standard, fixed("(SRS)")) ~ "SRS",
str_detect(party.standard, fixed("(DNZ)")) ~ "DNZ",
str_detect(party.standard, fixed("(PDP)")) ~ "PDP",
str_detect(party.standard, fixed("(RS)")) ~ "RS",
str_detect(party.standard, fixed("(SNS)")) ~ "SNS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
str_detect(party.standard, fixed("(SRS)")) ~ "SRS",
str_detect(party.standard, fixed("(DNZ)")) ~ "DNZ",
str_detect(party.standard, fixed("(PDP)")) ~ "PDP",
str_detect(party.standard, fixed("(RS)")) ~ "RS",
str_detect(party.standard, fixed("(SNS)")) ~ "SNS",
str_detect(party.standard, fixed("(DNS)")) ~ "DNS",
TRUE ~ as.character(party.standard)))
Serb <- BIH.imp %>%
filter(ethnicity=="S") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, "SNSD") ~ "SNSD",
str_detect(party.standard, fixed("(SDS)")) ~ "SDS",
str_detect(party.standard, fixed("(SRS)")) ~ "SRS",
str_detect(party.standard, fixed("(DNZ)")) ~ "DNZ",
str_detect(party.standard, fixed("(PDP)")) ~ "PDP",
str_detect(party.standard, fixed("(RS)")) ~ "RS",
str_detect(party.standard, fixed("(SNS)")) ~ "SNS",
str_detect(party.standard, fixed("(DNS)")) ~ "DNS",
str_detect(party.standard, fixed("Koalicija - PDP, SNS")) ~ "PDP",
str_detect(party.standard, fixed("SDS–NDP–NS–SRS")) ~ "SDS",
TRUE ~ as.character(party.standard)))
Bosniak <- BIH.imp %>%
filter(ethnicity=="B") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
df <- bind_rows("NIRL"=NIRL, "BIH"=BIH, .id="country") #naming dfs allows to get names of dfs into .id
Bosniak <- BIH.imp %>%
filter(ethnicity=="B") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats)
View(Bosniak)
Bosniak <- BIH.imp %>%
filter(ethnicity=="B") %>%
filter(seats>0) %>%
distinct(party.standard, entity, year, seats) %>%
mutate(party.collapse=case_when(str_detect(party.standard, fixed("(SDA)")) ~ "SDA",
TRUE ~ as.character(party.standard)))
