party2=X3,
party=X4,
constituency=X5) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika "))
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika "))
write_csv2(df.MPs, paste0(wd,"/data/MPs_2014_2018.csv" ))
write_csv2(df.MPs, paste0(wd,"/data/2014_2018_MPs.csv" ))
map(df.MPs$first_name, iconv)
map(df.MPs$first_name, iconv, to=UTF8)
map(df.MPs$first_name, iconv, to=UTF-8)
map(df.MPs$first_name, iconv, to=UFT-8)
map(df.MPs$first_name, iconv, to="UFT-8")
map(df.MPs$first_name, iconv, to="latin-9")
map(df.MPs$first_name, iconv, to="ASCII")
map(df.MPs$first_name, iconv, to="ASCII//TRANSLIT")
map(df.MPs$first_name, iconv, to="UTF-8")
map(df.MPs$first_name, iconv, to="latin-9")
iconvlist()
map(df.MPs$first_name, iconv, to="latin9")
map(df.MPs$first_name, iconv, to="latin3")
iconvlist()
map(df.MPs$first_name, iconv, to="windows-1253")
sessionInfo()
map(df.MPs$first_name, encoding)
map(df.MPs$first_name, Encoding)
map(df.MPs$first_name, iconv, from="UTF-8", to="windows-1253")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika "))
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
mutate(name=map(., iconv, from="UTF-8", to="window-1253"))
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika "))
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
# mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika "))
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs
library(tidyverse)
library(rvest)
library(glue)
wd <- getwd()
page_index <- seq(1,5,1)
links <- glue("https://www.parlament.ba/Representative/List?page={page_index}&mandateId=8")
pb <- dplyr::progress_estimated(length(links))
fn_scrap_MPs <- function(x) {
pb$tick()$print()
x  %>%
read_html() %>%
html_nodes("table") %>%
html_table(.,trim=T, fill=T) %>%
map_dfr(., as_tibble)
}
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
mutate(name=map(., iconv, from="UTF-8", to="window-1253"))
map(df.MPs$first_name, iconv, from="UTF-8", to="windows-1253")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika "))
map(df.MPs$first_name, iconv, from="UTF-8", to="windows-1253")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika ")) %>%
mutate(first_name=map(first_name, iconv, from="UTF-8", to="windows-1253"))
library(tidyverse)
library(rvest)
library(glue)
wd <- getwd()
page_index <- seq(1,5,1)
links <- glue("https://www.parlament.ba/Representative/List?page={page_index}&mandateId=8")
pb <- dplyr::progress_estimated(length(links))
fn_scrap_MPs <- function(x) {
pb$tick()$print()
x  %>%
read_html() %>%
html_nodes("table") %>%
html_table(.,trim=T, fill=T) %>%
map_dfr(., as_tibble)
}
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika ")) %>%
mutate(first_name=map(first_name, iconv, from="UTF-8", to="windows-1253"))
write_csv2(df.MPs, paste0(wd,"/data/2014_2018_MPs.csv" ))
View(df.MPs)
View(df.MPs)
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika ")) %>%
mutate(first_name=map_chr(first_name, iconv, from="UTF-8", to="windows-1253"))
library(tidyverse)
library(rvest)
library(glue)
wd <- getwd()
page_index <- seq(1,5,1)
links <- glue("https://www.parlament.ba/Representative/List?page={page_index}&mandateId=8")
pb <- dplyr::progress_estimated(length(links))
fn_scrap_MPs <- function(x) {
pb$tick()$print()
x  %>%
read_html() %>%
html_nodes("table") %>%
html_table(.,trim=T, fill=T) %>%
map_dfr(., as_tibble)
}
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika ")) %>%
mutate(first_name=map_chr(first_name, iconv, from="UTF-8", to="windows-1253"))
write_csv2(df.MPs, paste0(wd,"/data/2014_2018_MPs.csv" ))
library(tidyverse)
library(rvest)
library(glue)
wd <- getwd()
page_index <- seq(1,5,1)
links <- glue("https://www.parlament.ba/Representative/List?page={page_index}&mandateId=8")
pb <- dplyr::progress_estimated(length(links))
fn_scrap_MPs <- function(x) {
pb$tick()$print()
x  %>%
read_html() %>%
html_nodes("table") %>%
html_table(.,trim=T, fill=T) %>%
map_dfr(., as_tibble)
}
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika ")) %>%
mutate(first_name=map_chr(first_name, iconv, from="UTF-8", to="windows-1253")) %>%
mutate(second_name=map_chr(second_name, iconv, from="UTF-8", to="windows-1253"))
# # > changing encoding of names --------------------------------------------
#
# map(df.MPs$first_name, Encoding)
# map(df.MPs$first_name, iconv, from="UTF-8", to="windows-1253")
write_csv2(df.MPs, paste0(wd,"/data/2014_2018_MPs.csv" ))
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika ")) %>%
mutate_at(vars(first_name, second_name, party), iconv, from="UTF-8", to="windows-1253")
library(tidyverse)
library(rvest)
library(glue)
wd <- getwd()
page_index <- seq(1,5,1)
links <- glue("https://www.parlament.ba/Representative/List?page={page_index}&mandateId=8")
pb <- dplyr::progress_estimated(length(links))
fn_scrap_MPs <- function(x) {
pb$tick()$print()
x  %>%
read_html() %>%
html_nodes("table") %>%
html_table(.,trim=T, fill=T) %>%
map_dfr(., as_tibble)
}
df.MPs <- links %>%
set_names() %>%
map_dfr(.,  possibly(fn_scrap_MPs, otherwise = NULL), .id = "seq.links")
df.MPs<- df.MPs %>%
rename(name=X2,
party2=X3,
party=X4,
constituency=X5) %>%
#  mutate(name=map(., iconv, from="UTF-8", to="window-1253")) %>%
tidyr::separate(name, c("first_name", "second_name"), sep=", ") %>%
mutate(party2=stringr::str_remove(party2, "Klup poslanika ")) %>%
mutate_at(vars(first_name, second_name, party), iconv, from="UTF-8", to="windows-1253")
write_csv2(df.MPs, paste0(wd,"/data/2014_2018_MPs.csv" ))
write_csv2(df.MPs, paste0(wd,"/data/2014_2018_MPs.csv" ))
# setup -------------------------------------------------------------------
library(rvest)
library(tidyverse)
library(glue)
wdr <- getwd()
file.list  <- list.files(path=paste0(wdr,"/data/voting_records/"),
pattern=".pdf$",
all.files=T,
full.names = T)
raw_text <- file.list %>%
map(., pdftools::pdf_text) %>%
map(., stringr::str_subset, "Predstavničkog doma") %>%
map(., stringr::str_split, "\n", simplify=T) %>%
map(., stringr::str_subset, "Delegat") %>%
map(., stringr::str_squish) %>%
map_dfr(., enframe, name=NULL) %>%
mutate(value1=str_extract_all(value, "[[:alpha:]-]+")) %>%
mutate(value1=map(value1, paste, collapse=" ") %>% flatten_chr())
pb <- dplyr::progress_estimated(length(file.list))
fn_pdftools <- function(file, house)  {
pb$tick()$print()
file %>%
map(., pdftools::pdf_text) %>%  #creates character vector; each page one row
map(., glue_collapse, sep="\n") %>%  #cobmines character rows
map(., stringr::str_subset, coll(house, ignore_case=T)) %>%
map(., stringr::str_split, "\n", simplify = T) %>%
map(., stringr::str_subset, "Delegate") %>%                 #extracts rows which contain Delegate
map(., stringr::str_squish) %>%
map_dfr(., enframe, name = NULL) %>%
mutate(value1 = str_extract_all(value, "[[:alpha:]-]+")) %>%   #removes numbers => results in list
mutate(value1 = map(value1, paste, collapse = " ") %>% flatten_chr())  %>% #makes character vector out of list
mutate(delegate_name = word(value1, 1, 2)) %>%
mutate(entity = word(value1,-2)) %>%
mutate(entity = str_extract(value1, "RS | FBiH ") %>% str_trim(., side =
c("both"))) %>%
mutate(entity.pos = str_locate_all(value1, "RS|FBiH")) %>%    #calculates position of RS or FBiHH
mutate(entity.pos.end = map(entity.pos, pluck, 2) %>% flatten_int) %>%        #extracts end of location position
mutate(vote = str_sub(value1, entity.pos.end + 1, end = -1L) %>% str_trim(., side =
c("both")))       #end of location position is start for extraction subsequent words
}
df.all <- file.list %>%
set_names() %>%
map_dfr(., house="Predstavn" , possibly(fn_pdftools, otherwise=NULL), .id="law_id")
unique(df.all$vote)
df.all <- df.all %>%
mutate(vote.eng=case_when(vote=="ZA" ~ "yes",
vote=="PROTIV" ~ "no",
vote=="SUZDRŽAN" ~ "reserved",
vote=="Nije glasao" ~ "no vote",
vote=="Nije prisutan" ~ "not present")) %>%
mutate_at(vars(vote, vote.eng), as.factor)
source('~/ro - ceu/R/Bosnia/BiHLaws/script/2018_laws.R', encoding = 'UTF-8', echo=TRUE)
MPs <- read_csv2(paste0(wdr,"/data/2014_2018_MPs.csv")
)
View(MPs)
df.all
df.all <- df.all %>%
mutate(vote.eng=case_when(vote=="ZA" ~ "yes",
vote=="PROTIV" ~ "no",
vote=="SUZDRŽAN" ~ "reserved",
vote=="Nije glasao" ~ "no vote",
vote=="Nije prisutan" ~ "not present")) %>%
mutate_at(vars(vote, vote.eng), as.factor) %>%
mutate_at(vars(delegate_name), iconv, from="UTF-8", to="windows-1253")
df.all
MPs
MPs <- read_csv2(paste0(wdr,"/data/2014_2018_MPs.csv")) %>%
mutate(delegate_name=combine(second_name first_name))
MPs <- read_csv2(paste0(wdr,"/data/2014_2018_MPs.csv")) %>%
combine(delegate_name, c("second_name", "first_name"))
MPs <- read_csv2(paste0(wdr,"/data/2014_2018_MPs.csv")) %>%
unite(delegate_name, c("second_name", "first_name"))
MPs
MPs <- read_csv2(paste0(wdr,"/data/2014_2018_MPs.csv")) %>%
unite(delegate_name, c("second_name", "first_name"), sep=" ")
df.all
MPs
df.all %>%
left_join(., MPs %>% select(delegate_name, party))
df.all
df_all2<- df.all %>%
left_join(., MPs %>% select(delegate_name, party))
df_all<- df.all %>%
left_join(., MPs %>% select(delegate_name, party))
skimr::skim(df_all$party)
df.all %>%
group_by(entity, delegate_name, vote.eng) %>%
summarise(votes.cat=n()) %>%
ggplot()+
geom_bar(aes(x=delegate_name, y=votes.cat,
fill=vote.eng),
stat="identity",
position="fill")+
#facet_wrap(vars(entity), scales="free_x", shrink=T)+
facet_grid(.~party, space="free", scales="free_x")+
theme_minimal()+
scale_fill_viridis_d()+
theme(axis.text.x=element_text(angle=90, hjust=1))
df.all<- df.all %>%
left_join(., MPs %>% select(delegate_name, party))
df.all %>%
group_by(entity, delegate_name, vote.eng) %>%
summarise(votes.cat=n()) %>%
ggplot()+
geom_bar(aes(x=delegate_name, y=votes.cat,
fill=vote.eng),
stat="identity",
position="fill")+
#facet_wrap(vars(entity), scales="free_x", shrink=T)+
facet_grid(.~party, space="free", scales="free_x")+
theme_minimal()+
scale_fill_viridis_d()+
theme(axis.text.x=element_text(angle=90, hjust=1))
df.all
df.all %>%
group_by(party, delegate_name, vote.eng) %>%
summarise(votes.cat=n()) %>%
ggplot()+
geom_bar(aes(x=delegate_name, y=votes.cat,
fill=vote.eng),
stat="identity",
position="fill")+
#facet_wrap(vars(entity), scales="free_x", shrink=T)+
facet_grid(.~party, space="free", scales="free_x")+
theme_minimal()+
scale_fill_viridis_d()+
theme(axis.text.x=element_text(angle=90, hjust=1))
table(df.all$party, useNA = c("always"))
df.all %>%
distinct(delegate_name, party)
View(df.all)
delegate_party <- df.all %>%
distinct(delegate_name, party)
table(delegate_party$party, useNA = c("always"))
View(delegate_party)
df.all %>%
group_by(entity, party, delegate_name, vote.eng) %>%
summarise(votes.cat=n()) %>%
ggplot()+
geom_bar(aes(x=delegate_name, y=votes.cat,
fill=vote.eng),
stat="identity",
position="fill")+
#facet_wrap(vars(entity), scales="free_x", shrink=T)+
facet_grid(.~entity, space="free", scales="free_x")+
theme_minimal()+
scale_fill_viridis_d()+
theme(axis.text.x=element_text(angle=90, hjust=1))
df.all %>%
group_by(entity, party, delegate_name, vote.eng) %>%
summarise(votes.cat=n()) %>%
ggplot()+
geom_bar(aes(x=delegate_name, y=votes.cat,
fill=vote.eng),
stat="identity",
position="fill")+
#facet_wrap(vars(entity), scales="free_x", shrink=T)+
facet_grid(party~entity, space="free", scales="free_x")+
theme_minimal()+
scale_fill_viridis_d()+
theme(axis.text.x=element_text(angle=90, hjust=1))
df.all %>%
group_by(entity, party, delegate_name, vote.eng) %>%
summarise(votes.cat=n()) %>%
ggplot()+
geom_bar(aes(x=delegate_name, y=votes.cat,
fill=vote.eng),
stat="identity",
position="fill")+
#facet_wrap(vars(entity), scales="free_x", shrink=T)+
facet_grid(~entity, space="free", scales="free_x")+
theme_minimal()+
scale_fill_viridis_d()+
theme(axis.text.x=element_text(angle=90, hjust=1))
delegate.voting %>%
filter(entity=="FBiH" & vote=="ZA") %>%
arrange(perc)
delegate.voting %>%
filter(vote=="ZA") %>%
ggplot()+
geom_boxplot(aes(x=entity, y=perc,
fill=entity))+
# geom_beeswarm(aes(x=entity, y=perc),
#               color="firebrick",
#               size=3)+
geom_jitter(aes(x=entity, y=perc),
width=0.03)+
labs(subtitle="Each dot represents a member of HoR")+
hrbrthemes::theme_ipsum_tw()+
theme(legend.position=c(0.95,1),
legend.direction = "horizontal",
legend.title = element_blank())+
nord::scale_fill_nord(palette="algoma_forest")+
scale_color_manual(guide=FALSE)
delegate.voting <- df.all %>%
group_by(entity, delegate_name, vote, .drop=F) %>%
summarise(nobs=n()) %>%
mutate(total.votes=sum(nobs)) %>%
mutate(perc=nobs/total.votes*100)
delegate.voting <- df.all %>%
group_by(entity, party, delegate_name, vote, .drop=F) %>%
summarise(nobs=n()) %>%
mutate(total.votes=sum(nobs)) %>%
mutate(perc=nobs/total.votes*100)
delegate.voting %>%
filter(entity=="FBiH" & vote=="ZA") %>%
arrange(perc)
delegate.voting %>%
filter(vote=="ZA") %>%
ggplot()+
geom_boxplot(aes(x=entity, y=perc,
fill=entity))+
# geom_beeswarm(aes(x=entity, y=perc),
#               color="firebrick",
#               size=3)+
geom_jitter(aes(x=entity, y=perc),
width=0.03)+
labs(subtitle="Each dot represents a member of HoR")+
hrbrthemes::theme_ipsum_tw()+
theme(legend.position=c(0.95,1),
legend.direction = "horizontal",
legend.title = element_blank())+
nord::scale_fill_nord(palette="algoma_forest")+
scale_color_manual(guide=FALSE)
delegate.voting %>%
filter(vote=="ZA") %>%
ggplot()+
geom_boxplot(aes(x=entity, y=perc,
fill=entity))+
# geom_beeswarm(aes(x=entity, y=perc),
#               color="firebrick",
#               size=3)+
geom_jitter(aes(x=entity, y=perc,
color=party),
width=0.03)+
labs(subtitle="Each dot represents a member of HoR")+
hrbrthemes::theme_ipsum_tw()+
theme(legend.position=c(0.95,1),
legend.direction = "horizontal",
legend.title = element_blank())+
nord::scale_fill_nord(palette="algoma_forest")+
scale_color_manual(guide=FALSE)
df.all %>%
group_by(entity, party, delegate_name, vote.eng) %>%
summarise(votes.cat=n()) %>%
ggplot()+
geom_bar(aes(x=delegate_name, y=votes.cat,
fill=vote.eng),
stat="identity",
position="fill")+
#facet_wrap(vars(entity), scales="free_x", shrink=T)+
facet_grid(~party, space="free", scales="free_x")+
theme_minimal()+
scale_fill_viridis_d()+
theme(axis.text.x=element_text(angle=90, hjust=1))
